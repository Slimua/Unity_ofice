name: 🍰 Release Unstable

on:
    push:
        tags:
            - 'v*.*.*-alpha.*'
            - 'v*.*.*-beta.*'
            - 'v*.*.*-rc.*'

permissions:
    contents: read

jobs:
    release-unstable:
        if: github.repository == 'dream-num/univer'
        runs-on: ubuntu-latest

        outputs:
            release_type: ${{ steps.release-type.outputs.release_type }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: 🚚 Get release type
              id: release-type
              run: |
                  if [[ ${{ github.ref_name }} =~ -(rc|beta|alpha)\. ]]; then
                      extracted_type="${BASH_REMATCH[1]}"
                      echo "release_type=$extracted_type" >> $GITHUB_OUTPUT
                  fi

            - name: 🚚 Install dependencies
              run: pnpm install

            - name: 📦 Build
              run: pnpm run build

            - name: 🐙 Publish
              if: ${{ steps.release-type.outputs.release_type == 'alpha' || steps.release-type.outputs.release_type == 'beta' || steps.release-type.outputs.release_type == 'rc' }}
              run: pnpm publish --access public --tag ${{ steps.release-type.outputs.release_type }} -r
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    build-demo:
        runs-on: ubuntu-latest
        needs: [release-unstable]

        outputs:
            preview-url: ${{ steps.vercel-demo.outputs.preview-url }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install

            #  ================= Deploy Demo =================
            - name: 📦 Build demo
              run: pnpm run build:demo

            - name: Copy demo to workspace
              run: |
                  mkdir .workspace
                  cp -r ./examples/docs/local .workspace/doc
                  cp -r ./examples/sheets/local .workspace/sheet

            - name: 🚀 Deploy to Vercel (demo)
              uses: amondnet/vercel-action@v25
              id: vercel-demo
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.ORG_ID}}
                  vercel-project-id: ${{ secrets.PROJECT_ID}}

    build-storybook:
        runs-on: ubuntu-latest
        needs: [release-unstable]

        outputs:
            preview-url: ${{ steps.vercel-storybook.outputs.preview-url }}

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install

            # ================= Deploy Storybook =================
            - name: 📦 Build storybook
              run: pnpm run build:storybook

            - name: 🚀 Deploy to Vercel (storybook)
              uses: amondnet/vercel-action@v25
              id: vercel-storybook
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.ORG_ID}}
                  vercel-project-id: ${{ secrets.PROJECT_ID_STORYBOOK}}

    notify:
        needs: [release-unstable, build-demo, build-storybook]
        runs-on: ubuntu-latest
        if: ${{ always() }}

        steps:
            # ================= Notify Discord =================
            - name: 👾 Discord Notification
              uses: sarisia/actions-status-discord@v1
              if: ${{ success() }}
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  status: ${{ job.status }}
                  description: |
                      🎉 Unstable release: Successful

                      🎉 🎉 🎉 🎉 🎉 🎉 🎉 🎉 🎉
                      Release version: ${{ github.ref_name }}

                      **[View Deployment]**
                      - [📑 Doc](${{ needs.build-demo.outputs.preview-url }}/doc/)
                      - [📊 Sheet](${{ needs.build-demo.outputs.preview-url }}/sheet/)
                      - [📽️ Slide](${{ needs.build-demo.outputs.preview-url }}/slide/)

                      **[View Docs]**
                      - [📚 Storybook](${{ needs.build-storybook.outputs.preview-url }}/)
                      🎉 🎉 🎉 🎉 🎉 🎉 🎉 🎉 🎉

                      Have a good dream! 🌙
                  nofail: false
                  nodetail: false
                  nocontext: false
                  noprefix: true
                  color: 0x00b894
                  username: Unstable Release

            - name: 👾 Discord Notification
              uses: sarisia/actions-status-discord@v1
              if: ${{ failure() }}
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  status: ${{ job.status }}
                  description: |
                      💥 Ustable release: Unsuccessful 💩

                      👿 👿 👿 👿 👿 👿 👿 👿 👿
                      Failed version: ${{ github.ref_name }}
                      👿 👿 👿 👿 👿 👿 👿 👿 👿

                      Oops! Something went wrong. 😭
                  nofail: false
                  nodetail: false
                  nocontext: false
                  noprefix: true
                  color: 0xd63031
                  username: Unstable Release
