name: 🍰 Release Unstable

on:
    push:
        tags:
            - 'v*.*.*-alpha.*'
            - 'v*.*.*-beta.*'
            - 'v*.*.*-rc.*'

permissions:
    contents: read

jobs:
    release-unstable:
        if: github.repository == 'dream-num/univer'
        runs-on: ubuntu-latest

        outputs:
            release_type: ${{ steps.release-type.outputs.release_type }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  registry-url: https://registry.npmjs.org

            - name: 🚚 Get release type
              id: release-type
              run: |
                  if [[ ${{ github.ref_name }} =~ -(rc|beta|alpha)\. ]]; then
                      extracted_type="${BASH_REMATCH[1]}"
                      echo "release_type=$extracted_type" >> $GITHUB_OUTPUT
                  fi

            - name: 🚚 Install dependencies
              run: |
                  pnpm install
                  pnpm run build

            - name: 🐙 Publish (alpha)
              if: ${{ steps.release-type.outputs.release_type == 'alpha' }}
              run: pnpm publish --access public --tag ${{ steps.release-type.outputs.release_type }} -r
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: 🐙 Publish (beta, rc)
              if: ${{ steps.release-type.outputs.release_type == 'beta' || steps.release-type.outputs.release_type == 'rc' }}
              run: pnpm publish --access public -r
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    release-verdaccio:
        if: github.repository == 'dream-num/univer'
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 8
                  run_install: false

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  registry-url: ${{ secrets.VERDACCIO_URL }}
                  scope: '@univerjs'

            - name: 🚚 Get release type
              id: release-type
              run: |
                  if [[ ${{ github.ref_name }} =~ -(rc|beta|alpha)\. ]]; then
                      extracted_type="${BASH_REMATCH[1]}"
                      echo "release_type=$extracted_type" >> $GITHUB_OUTPUT
                  fi

            - name: 🚚 Install dependencies
              run: |
                  pnpm install
                  pnpm run build

            - name: 🐙 Publish (alpha)
              if: ${{ steps.release-type.outputs.release_type == 'alpha' }}
              run: pnpm publish --access public --tag ${{ steps.release-type.outputs.release_type }} -r
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.VERDACCIO_TOKEN }}

            - name: 🐙 Publish (beta, rc)
              if: ${{ steps.release-type.outputs.release_type == 'beta' || steps.release-type.outputs.release_type == 'rc' }}
              run: pnpm publish --access public -r
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.VERDACCIO_TOKEN }}

    build-demo:
        runs-on: ubuntu-latest
        needs: [release-unstable]

        outputs:
            preview-url: ${{ steps.vercel-demo.outputs.preview-url }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: ./.github/actions/setup-node

            #  ================= Deploy Demo =================
            - name: 📦 Build demo
              run: pnpm run build:demo

            - name: Copy demo to workspace
              run: |
                  mkdir .workspace
                  cp -r ./examples/local/* .workspace

            - name: 🚀 Deploy to Vercel (demo)
              uses: amondnet/vercel-action@v25
              id: vercel-demo
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.ORG_ID}}
                  vercel-project-id: ${{ secrets.PROJECT_ID}}

    build-storybook:
        runs-on: ubuntu-latest
        needs: [release-unstable]

        outputs:
            preview-url: ${{ steps.vercel-storybook.outputs.preview-url }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: ./.github/actions/setup-node

            # ================= Deploy Storybook =================
            - name: 📦 Build storybook
              run: pnpm run build:storybook

            - name: 🚀 Deploy to Vercel (storybook)
              uses: amondnet/vercel-action@v25
              id: vercel-storybook
              with:
                  vercel-token: ${{ secrets.VERCEL_TOKEN }}
                  vercel-org-id: ${{ secrets.ORG_ID}}
                  vercel-project-id: ${{ secrets.PROJECT_ID_STORYBOOK}}
                  vercel-args: --prod

    notify:
        needs: [release-unstable, release-verdaccio, build-demo, build-storybook]
        runs-on: ubuntu-latest

        steps:
            - name: Invoke deployment hook
              uses: distributhor/workflow-webhook@v3
              with:
                  webhook_url: ${{ secrets.WEBHOOK_URL }}
                  data: >
                      {
                          "type": "release",
                          "version": "${{ github.ref_name }}",
                          "workflow": {
                              "id": "${{ github.run_id }}"
                          },
                          "preview": {
                              "📑 Examples": "${{ needs.build-demo.outputs.preview-url }}/",
                              "📚 Storybook": "${{ needs.build-storybook.outputs.preview-url }}/"
                          }
                      }
